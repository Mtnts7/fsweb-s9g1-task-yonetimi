{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Documents\\\\workintech\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formstate: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  return (\n    /*#__PURE__*/\n    // <div>Formunuzu react-hook-form kullanarak burada oluşturun. TaskForm dosyasındaki HTML yapısını vs app.css içerisindeki classları kullanabilirsiniz.</div>\n    _jsxDEV(\"form\", {\n      className: \"taskForm\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-line\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"title\",\n          children: [\"Ba\\u015Fl\\u0131k\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            ...register(\"title\", {\n              required: \"Task başlığı yazmalısınız\",\n              minLength: {\n                value: 3,\n                message: \"Task başlığı en az 3 karakter olmalı\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(TaskHookForm, \"zGvUhPyRDfIGlnDV2ktZrIeIcRU=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useForm","TaskHookForm","register","handleSubmit","formstate","errors","isValid","mode","required","minLength","value","message"],"sources":["C:/Users/A/Documents/workintech/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\nexport default function TaskHookForm() {\r\n\r\n    const {\r\n      register,\r\n      handleSubmit,\r\n      formstate: {errors, isValid},\r\n    } = useForm({mode:\"onChange\"});\r\n\r\n  return (\r\n    // <div>Formunuzu react-hook-form kullanarak burada oluşturun. TaskForm dosyasındaki HTML yapısını vs app.css içerisindeki classları kullanabilirsiniz.</div>\r\n    <form className='taskForm' onSubmit={handleSubmit}> \r\n      <div className='form-line'>\r\n        <label className='input-label' htmlFor='title'>\r\n          Başlık\r\n        <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        {...register(\"title\",{required:\"Task başlığı yazmalısınız\",minLength:{value: 3,message:\"Task başlığı en az 3 karakter olmalı\"}})}\r\n        />\r\n        </label>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AAAC;AAG1C,eAAe,SAASC,YAAY,GAAG;EAAA;EAEnC,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAACC,MAAM;MAAEC;IAAO;EAC7B,CAAC,GAAGN,OAAO,CAAC;IAACO,IAAI,EAAC;EAAU,CAAC,CAAC;EAEhC;IAAA;IACE;IACA;MAAM,SAAS,EAAC,UAAU;MAAC,QAAQ,EAAEJ,YAAa;MAAA,uBAChD;QAAK,SAAS,EAAC,WAAW;QAAA,uBACxB;UAAO,SAAS,EAAC,aAAa;UAAC,OAAO,EAAC,OAAO;UAAA,WAAC,kBAE/C;YACA,IAAI,EAAC,MAAM;YACX,IAAI,EAAC,OAAO;YAAA,GACRD,QAAQ,CAAC,OAAO,EAAC;cAACM,QAAQ,EAAC,2BAA2B;cAACC,SAAS,EAAC;gBAACC,KAAK,EAAE,CAAC;gBAACC,OAAO,EAAC;cAAsC;YAAC,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QAC9H;QAAA;UAAA;UAAA;UAAA;QAAA;MACM;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACD;AAEX;AAAC,GAvBuBV,YAAY;EAAA,QAM5BD,OAAO;AAAA;AAAA,KANSC,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}