{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Documents\\\\workintech\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(_ref) {\n  _s();\n  let {\n    kisiler,\n    submitFn,\n    notify\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formstate: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      people: []\n    }\n  });\n  const onSubmit = data => {\n    submitFn({\n      ...data,\n      id: nanoid(5),\n      status: \"yapılacak\"\n    });\n    reset();\n    notify(`${data.title} yapılacaklar eklendi.`);\n  };\n  return (\n    /*#__PURE__*/\n    // <div>Formunuzu react-hook-form kullanarak burada oluşturun. TaskForm dosyasındaki HTML yapısını vs app.css içerisindeki classları kullanabilirsiniz.</div>\n    _jsxDEV(\"form\", {\n      className: \"taskForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"title\",\n          children: [\"Ba\\u015Fl\\u0131k\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            ...register(\"title\", {\n              required: \"Task başlığı yazmalısınız\",\n              minLength: {\n                value: 3,\n                message: \"Task başlığı en az 3 karakter olmalı\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-error\",\n          children: errors.title.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"description\",\n          children: [\"A\\xE7\\u0131klama\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"input-textarea\",\n            rows: \"3\",\n            id: \"description\",\n            name: \"description\",\n            ...register(\"description\", {\n              required: \"Task açıklaması yazmalısınız\",\n              minLength: {\n                value: 10,\n                message: \"Task açıklaması en az 10 karakter olmalı\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-error\",\n          children: errors.description.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          children: \"\\u0130nsanlar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: ini.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"people\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), p]\n          }, p, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), errors.people && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-error\",\n          children: errors.people.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-line\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          disabled: !isValid,\n          children: \"Kaydet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(TaskHookForm, \"zGvUhPyRDfIGlnDV2ktZrIeIcRU=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useForm","nanoid","TaskHookForm","kisiler","submitFn","notify","register","handleSubmit","formstate","errors","isValid","mode","defaultValues","title","description","people","onSubmit","data","id","status","reset","required","minLength","value","message","ini","map","p"],"sources":["C:/Users/A/Documents/workintech/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { nanoid } from 'nanoid'\r\n\r\n\r\nexport default function TaskHookForm({kisiler,submitFn,notify}) {\r\n\r\n    const {\r\n      register,\r\n      handleSubmit,\r\n      formstate: {errors, isValid},\r\n    } = useForm({mode:\"onChange\",defaultValues:{\r\n      title: \"\",\r\n      description: \"\",\r\n      people: [],\r\n    }});\r\n\r\n\r\n    const onSubmit = (data) =>{\r\n      submitFn({...data,id: nanoid(5),status: \"yapılacak\"})\r\n      reset()\r\n      notify(`${data.title} yapılacaklar eklendi.`)\r\n    }\r\n\r\n  return (\r\n    // <div>Formunuzu react-hook-form kullanarak burada oluşturun. TaskForm dosyasındaki HTML yapısını vs app.css içerisindeki classları kullanabilirsiniz.</div>\r\n    <form className='taskForm' onSubmit={handleSubmit}> \r\n      <div className='form-line'>\r\n        <label className='input-label' htmlFor='title'>\r\n          Başlık\r\n        <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        {...register(\"title\",{required:\"Task başlığı yazmalısınız\",minLength:{value: 3,message:\"Task başlığı en az 3 karakter olmalı\"}})}\r\n        />\r\n        </label>\r\n        {errors.title && <p className='input-error'>{errors.title.message}</p>}\r\n      </div>\r\n      <div className='form-line'>\r\n        <label className='input-label' htmlFor='description'>\r\n          Açıklama \r\n        <textarea\r\n        className='input-textarea'\r\n        rows=\"3\"\r\n        id=\"description\"\r\n        name='description'\r\n        {...register(\"description\",{required:\"Task açıklaması yazmalısınız\",minLength:{value: 10,message:\"Task açıklaması en az 10 karakter olmalı\"}})}\r\n        />   \r\n        </label>\r\n        {errors.description && <p className='input-error'>{errors.description.message}</p>}\r\n      </div>\r\n      <div className='form-line'>\r\n        <label className='input-label'>İnsanlar</label>\r\n        <div>\r\n          {ini.map((p)=>(\r\n            <label className='input-checkbox' key={p}>\r\n              <input\r\n              type='checkbox'\r\n              name='people'\r\n              />\r\n              {p}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        {errors.people && <p className='input-error'>{errors.people.message}</p>}\r\n      </div>\r\n\r\n      <div className='form-line'>\r\n        <button\r\n        className='submit-button'\r\n        type='submit'\r\n        disabled={!isValid}\r\n        >Kaydet\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,MAAM,QAAQ,QAAQ;AAAA;AAG/B,eAAe,SAASC,YAAY,OAA4B;EAAA;EAAA,IAA3B;IAACC,OAAO;IAACC,QAAQ;IAACC;EAAM,CAAC;EAE1D,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAACC,MAAM;MAAEC;IAAO;EAC7B,CAAC,GAAGV,OAAO,CAAC;IAACW,IAAI,EAAC,UAAU;IAACC,aAAa,EAAC;MACzCC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE;IACV;EAAC,CAAC,CAAC;EAGH,MAAMC,QAAQ,GAAIC,IAAI,IAAI;IACxBb,QAAQ,CAAC;MAAC,GAAGa,IAAI;MAACC,EAAE,EAAEjB,MAAM,CAAC,CAAC,CAAC;MAACkB,MAAM,EAAE;IAAW,CAAC,CAAC;IACrDC,KAAK,EAAE;IACPf,MAAM,CAAE,GAAEY,IAAI,CAACJ,KAAM,wBAAuB,CAAC;EAC/C,CAAC;EAEH;IAAA;IACE;IACA;MAAM,SAAS,EAAC,UAAU;MAAC,QAAQ,EAAEN,YAAa;MAAA,wBAChD;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAO,SAAS,EAAC,aAAa;UAAC,OAAO,EAAC,OAAO;UAAA,WAAC,kBAE/C;YACA,IAAI,EAAC,MAAM;YACX,IAAI,EAAC,OAAO;YAAA,GACRD,QAAQ,CAAC,OAAO,EAAC;cAACe,QAAQ,EAAC,2BAA2B;cAACC,SAAS,EAAC;gBAACC,KAAK,EAAE,CAAC;gBAACC,OAAO,EAAC;cAAsC;YAAC,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QAC9H;QAAA;UAAA;UAAA;UAAA;QAAA,QACM,EACPf,MAAM,CAACI,KAAK,iBAAI;UAAG,SAAS,EAAC,aAAa;UAAA,UAAEJ,MAAM,CAACI,KAAK,CAACW;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAClE,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAO,SAAS,EAAC,aAAa;UAAC,OAAO,EAAC,aAAa;UAAA,WAAC,kBAErD;YACA,SAAS,EAAC,gBAAgB;YAC1B,IAAI,EAAC,GAAG;YACR,EAAE,EAAC,aAAa;YAChB,IAAI,EAAC,aAAa;YAAA,GACdlB,QAAQ,CAAC,aAAa,EAAC;cAACe,QAAQ,EAAC,8BAA8B;cAACC,SAAS,EAAC;gBAACC,KAAK,EAAE,EAAE;gBAACC,OAAO,EAAC;cAA0C;YAAC,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QAC5I;QAAA;UAAA;UAAA;UAAA;QAAA,QACM,EACPf,MAAM,CAACK,WAAW,iBAAI;UAAG,SAAS,EAAC,aAAa;UAAA,UAAEL,MAAM,CAACK,WAAW,CAACU;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9E,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAO,SAAS,EAAC,aAAa;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC/C;UAAA,UACGC,GAAG,CAACC,GAAG,CAAEC,CAAC,iBACT;YAAO,SAAS,EAAC,gBAAgB;YAAA,wBAC/B;cACA,IAAI,EAAC,UAAU;cACf,IAAI,EAAC;YAAQ;cAAA;cAAA;cAAA;YAAA,QACX,EACDA,CAAC;UAAA,GALmCA,CAAC;YAAA;YAAA;YAAA;UAAA,QAOzC;QAAC;UAAA;UAAA;UAAA;QAAA,QACE,EACLlB,MAAM,CAACM,MAAM,iBAAI;UAAG,SAAS,EAAC,aAAa;UAAA,UAAEN,MAAM,CAACM,MAAM,CAACS;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACpE,eAEN;QAAK,SAAS,EAAC,WAAW;QAAA,uBACxB;UACA,SAAS,EAAC,eAAe;UACzB,IAAI,EAAC,QAAQ;UACb,QAAQ,EAAE,CAACd,OAAQ;UAAA,UAClB;QACD;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;AAEX;AAAC,GAxEuBR,YAAY;EAAA,QAM5BF,OAAO;AAAA;AAAA,KANSE,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}