{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\Documents\\\\workintech\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { nanoid } from \"nanoid\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(_ref) {\n  _s();\n  let {\n    kisiler,\n    submitFn\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      people: []\n    }\n  });\n  const onSubmit = data => {\n    submitFn({\n      ...data,\n      id: nanoid(5),\n      status: \"yapılacak\"\n    });\n  };\n  const notify = () => toast(`Yeni görevin hayırlı olsun`);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        name: \"description\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: p,\n            ...register(\"people\", {\n              minLength: {\n                value: 1,\n                message: \"Lütfen en az bir kişi seçin\"\n              },\n              maxLength: {\n                value: 3,\n                message: \"En fazla 3 kişi seçebilirsiniz\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), errors.people && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-line\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          disabled: !isValid,\n          onClick: notify,\n          children: \"Kaydet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n  // <div>Formunuzu react-hook-form kullanarak burada oluşturun. TaskForm dosyasındaki HTML yapısını vs app.css içerisindeki classları kullanabilirsiniz.</div>\n  ;\n}\n_s(TaskHookForm, \"uQSxGqJ4blX4r4Y/yMKbjTGOY6Q=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useForm","nanoid","ToastContainer","toast","TaskHookForm","kisiler","submitFn","register","handleSubmit","formState","errors","isValid","mode","defaultValues","title","description","people","onSubmit","data","id","status","notify","required","minLength","value","message","map","p","maxLength"],"sources":["C:/Users/A/Documents/workintech/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from 'react'\r\nimport {useForm} from \"react-hook-form\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { ToastContainer ,toast } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function TaskHookForm({kisiler,submitFn}) {\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState:{errors,isValid},\r\n    } = useForm({mode:\"onChange\",\r\n    defaultValues:{\r\n                    title: \"\",\r\n                    description: \"\",\r\n                    people: [],\r\n    }})\r\n\r\n\r\n  const onSubmit = (data) =>{\r\n    submitFn({\r\n      ...data,\r\n      id: nanoid(5),\r\n      status: \"yapılacak\"\r\n    });\r\n  }\r\n\r\n  const notify = () => toast(`Yeni görevin hayırlı olsun`)\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n        className=\"input-text\"\r\n        id=\"title\"\r\n        name=\"title\"\r\n        type=\"text\"\r\n        {...register(\"title\",{required:\"Task başlığı yazmalısınız\",minLength:{value:3,message:\"Task başlığı en az 3 karakter olmalı\"}})}/>\r\n        {errors.title && <p className=\"input-error\">{errors.title.message}</p>}\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n        className=\"input-textarea\"\r\n        rows=\"3\"\r\n        id=\"description\"\r\n        name=\"description\"\r\n        {...register(\"description\",{required:\"Task açıklaması yazmalısınız\",minLength:{value:10,message:\"Task açıklaması en az 10 karakter olmalı\"}})}/>\r\n        {errors.description && <p className=\"input-error\">{errors.description.message}</p>}\r\n      </div>\r\n      <div className='form-line'>\r\n        <label className=\"input-label\">İnsanlar</label>\r\n        <div>\r\n          {kisiler.map((p)=>(\r\n            <label className=\"input-checkbox\" \r\n            key={p}\r\n            >\r\n              <input\r\n              type='checkbox'\r\n              name='people'\r\n              value={p}\r\n              {...register(\"people\",{minLength:{value:1,message:\"Lütfen en az bir kişi seçin\"},maxLength:{value:3,message:\"En fazla 3 kişi seçebilirsiniz\"}})}\r\n              />\r\n              {p}\r\n            </label>\r\n           ))} \r\n        </div>\r\n            {errors.people && <p className=\"input-error\">{errors.people.message}</p>}\r\n        <div className=\"form-line\">\r\n          <button \r\n          className='submit-button'\r\n          type='submit'\r\n          disabled={!isValid}\r\n          onClick={notify}\r\n          >\r\n            Kaydet\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </form>\r\n    // <div>Formunuzu react-hook-form kullanarak burada oluşturun. TaskForm dosyasındaki HTML yapısını vs app.css içerisindeki classları kullanabilirsiniz.</div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}